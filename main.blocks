<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="{0ifD*2sUzup|y38(0,q" type="KIND_SpriteKind">circle</variable><variable id="KEU,%xnX)FY?b-v@#ho2">color_number</variable></variables><block id="NT3V?qMAFA?/gG,Ml6tj" type="pxt-on-start" y="20" x="20"><statement name="HANDLER"><block id="AxtWCy8u@MBIChM|q=?g" type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let radius = 0" numlines="1" declaredvars="radius"></mutation><next><block id="b+TLSXgIBFkj$h_$Wyp|" type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class circle {" numlines="26" line25="}" line24="" line23="    }" line22="        return this.circle_image" line21="    getImage(): Image {" line20="    }" line19="        return this.circle_sprite" line18="    getSprite():Sprite{" line17="    }" line16="        this.circle_sprite.y = y" line15="        this.circle_sprite.x = x" line14="        this.circle_sprite = sprites.create(this.circle_image,SpriteKind.circle)" line13="        this.circle_image.drawCircle(this.radius, this.radius, this.radius, this.color)" line12="        this.circle_image = image.create(this.wh,this.wh)" line11="        this.wh = 2 * this.radius + 1" line10="        this.color = color" line9="        this.radius = radius" line8="                y:number= 40){" line7="                x:number = 80, " line6="    constructor(radius:number, color:number, " line5="    private wh:number" line4="    private circle_sprite:Sprite" line3="    private circle_image:Image" line2="    private color:number" line1="    private radius:number"></mutation><next><block id="^NbQXic}^#~sc#.Ls}WI" type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function add_circle():circle{" numlines="10" line9="}" line8="    return c;" line7="    cs.setFlag(SpriteFlag.BounceOnWall, true)" line6="    cs.vy = Math.randomRange(-100, 100)" line5="    cs.vx = Math.randomRange(-100, 100)" line4="    let cs = c.getSprite()" line3="    let c = new circle(radius, color_number)" line2="    color_number = (color_number + 1) % 12" line1="    radius = 2 * Math.randomRange(10, 30) + 1"></mutation><next><block id="fCakp]:s4a1Ski:(8Nu=" type="variables_set"><field id="KEU,%xnX)FY?b-v@#ho2" name="VAR">color_number</field><value name="VALUE"><shadow id="M}R(?W3~q8%VjPjoIA~Y" type="math_number"><field name="NUM">-1</field></shadow></value><next><block id="oPO43y)x~dL!J1d75Zz[" type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let f:circle = add_circle()" numlines="1" declaredvars="f"></mutation></block></next></block></next></block></next></block></next></block></statement></block><block id="]I=?,S*0cS7p+(!T=():" type="keyonevent" y="20" x="528"><field name="button">controller.up</field><field name="event">ControllerButtonEvent.Pressed</field><statement name="HANDLER"><block id="rP~~i3G0*Nqfq%@|l^zy" type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let d:circle = add_circle()" numlines="1" declaredvars="d"></mutation></block></statement></block><block id="m$s^NbfkmRnS663^KUT*" type="keyonevent" y="20" x="843"><field name="button">controller.up</field><field name="event">ControllerButtonEvent.Repeated</field><statement name="HANDLER"><block id="HqWQ0qP-uVG`dEa*v#c`" type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let e: circle = add_circle()" numlines="1" declaredvars="e"></mutation></block></statement></block></xml>